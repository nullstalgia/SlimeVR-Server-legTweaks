import i18next from 'i18next';
import Fluent from 'i18next-fluent';
// @ts-expect-error - this package doesn't contain typings but we dont need it
import Backend from 'i18next-fluent-backend';
import LanguageDetector from 'i18next-browser-languagedetector';
import { initReactI18next } from 'react-i18next';

export const defaultNS = 'translation';

export const langs = [
  {
    name: 'ðŸ‡ºðŸ‡¸ English',
    key: 'en',
  },
  {
    name: 'ðŸ§‰ EspaÃ±ol Latinoamericano',
    key: 'es-419'
  },
  {
    name: 'ðŸ‡«ðŸ‡· FranÃ§ais',
    key: 'fr',
  },
  {
    name: 'ðŸ‡®ðŸ‡¹ Italiano',
    key: 'it',
  },
  {
    name: 'ðŸ‡¯ðŸ‡µ æ—¥æœ¬èªž',
    key: 'ja',
  },
  {
    name: 'ðŸ‡°ðŸ‡· í•œêµ­ì–´',
    key: 'ko',
  },
  {
    name: 'ðŸ‡µðŸ‡± Polski',
    key: 'pl',
  },
  {
    name: 'ðŸ‡§ðŸ‡· PortuguÃªs Brasileiro',
    key: 'pt-BR',
  },
  {
    name: 'ðŸ‡»ðŸ‡³ Tiáº¿ng Viá»‡t',
    key: 'vi',
  },
  {
    name: 'ðŸ‡¨ðŸ‡³ ç®€ä½“ä¸­æ–‡',
    key: 'zh-Hans',
  },
  {
    name: 'ðŸ¥º Engwish~ OwO',
    key: 'en-OwO',
  },
];

i18next
  .use(Fluent)
  .use(Backend)
  .use(LanguageDetector)
  .use(initReactI18next)
  .init({
    fallbackLng: 'en',
    defaultNS,
    backend: {
      loadPath: '/i18n/{{lng}}/{{ns}}.ftl',
    },
  });

if (import.meta.hot) {
  // detect hot reload translation file changes
  import.meta.hot.on('locales-update', async () => {
    await i18next.reloadResources();
    await i18next.changeLanguage(i18next.language);
  });
}

export default i18next;
